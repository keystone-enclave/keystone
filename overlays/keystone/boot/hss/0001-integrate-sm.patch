diff --git a/application/crt.S b/application/crt.S
index 1475373..b47fa95 100644
--- a/application/crt.S
+++ b/application/crt.S
@@ -158,6 +158,7 @@ _start_hang:
 	.section .entry, "ax", %progbits
 	.align 3
 	.globl _trap_handler
+	.globl _trap_exit
 _trap_handler:
 	// Swap TP and MSCRATCH
 	csrrw	tp, CSR_MSCRATCH, tp
@@ -305,6 +306,52 @@ _trap_handler_all_mode:
 
 	mret
 
+_trap_exit:
+        /* Restore all general regisers except A0 and T0 */
+        REG_L   ra, SBI_TRAP_REGS_OFFSET(ra)(a0)
+        REG_L   sp, SBI_TRAP_REGS_OFFSET(sp)(a0)
+        REG_L   gp, SBI_TRAP_REGS_OFFSET(gp)(a0)
+        REG_L   tp, SBI_TRAP_REGS_OFFSET(tp)(a0)
+        REG_L   t1, SBI_TRAP_REGS_OFFSET(t1)(a0)
+        REG_L   t2, SBI_TRAP_REGS_OFFSET(t2)(a0)
+        REG_L   s0, SBI_TRAP_REGS_OFFSET(s0)(a0)
+        REG_L   s1, SBI_TRAP_REGS_OFFSET(s1)(a0)
+        REG_L   a1, SBI_TRAP_REGS_OFFSET(a1)(a0)
+        REG_L   a2, SBI_TRAP_REGS_OFFSET(a2)(a0)
+        REG_L   a3, SBI_TRAP_REGS_OFFSET(a3)(a0)
+        REG_L   a4, SBI_TRAP_REGS_OFFSET(a4)(a0)
+        REG_L   a5, SBI_TRAP_REGS_OFFSET(a5)(a0)
+        REG_L   a6, SBI_TRAP_REGS_OFFSET(a6)(a0)
+        REG_L   a7, SBI_TRAP_REGS_OFFSET(a7)(a0)
+        REG_L   s2, SBI_TRAP_REGS_OFFSET(s2)(a0)
+        REG_L   s3, SBI_TRAP_REGS_OFFSET(s3)(a0)
+        REG_L   s4, SBI_TRAP_REGS_OFFSET(s4)(a0)
+        REG_L   s5, SBI_TRAP_REGS_OFFSET(s5)(a0)
+        REG_L   s6, SBI_TRAP_REGS_OFFSET(s6)(a0)
+        REG_L   s7, SBI_TRAP_REGS_OFFSET(s7)(a0)
+        REG_L   s8, SBI_TRAP_REGS_OFFSET(s8)(a0)
+        REG_L   s9, SBI_TRAP_REGS_OFFSET(s9)(a0)
+        REG_L   s10, SBI_TRAP_REGS_OFFSET(s10)(a0)
+        REG_L   s11, SBI_TRAP_REGS_OFFSET(s11)(a0)
+        REG_L   t3, SBI_TRAP_REGS_OFFSET(t3)(a0)
+        REG_L   t4, SBI_TRAP_REGS_OFFSET(t4)(a0)
+        REG_L   t5, SBI_TRAP_REGS_OFFSET(t5)(a0)
+        REG_L   t6, SBI_TRAP_REGS_OFFSET(t6)(a0)
+
+        /* Restore MEPC and MSTATUS CSRs */
+        REG_L   t0, SBI_TRAP_REGS_OFFSET(mepc)(a0)
+        csrw    CSR_MEPC, t0
+        REG_L   t0, SBI_TRAP_REGS_OFFSET(mstatus)(a0)
+        csrw    CSR_MSTATUS, t0
+
+        /* Restore T0 */
+        REG_L   t0, SBI_TRAP_REGS_OFFSET(t0)(a0)
+
+        /* Restore A0 */
+        REG_L   a0, SBI_TRAP_REGS_OFFSET(a0)(a0)
+
+        mret
+
 	.section .entry, "ax", %progbits
 	.align	3
 	.globl	_reset_regs
diff --git a/boards/mpfs-icicle-kit-es/mpfs_hal_config/mss_sw_config.h b/boards/mpfs-icicle-kit-es/mpfs_hal_config/mss_sw_config.h
index 112b401..94f7aee 100644
--- a/boards/mpfs-icicle-kit-es/mpfs_hal_config/mss_sw_config.h
+++ b/boards/mpfs-icicle-kit-es/mpfs_hal_config/mss_sw_config.h
@@ -221,5 +221,15 @@
 #  endif
 #endif
 
+#define LIBERO_SETTING_HART1_CSR_PMPCFG0 0
+#define LIBERO_SETTING_HART2_CSR_PMPCFG0 0
+#define LIBERO_SETTING_HART3_CSR_PMPCFG0 0
+#define LIBERO_SETTING_HART4_CSR_PMPCFG0 0
+
+#define LIBERO_SETTING_HART1_CSR_PMPADDR0 0
+#define LIBERO_SETTING_HART2_CSR_PMPADDR0 0
+#define LIBERO_SETTING_HART3_CSR_PMPADDR0 0
+#define LIBERO_SETTING_HART4_CSR_PMPADDR0 0
+
 #endif /* USER_CONFIG_MSS_USER_CONFIG_H_ */
 
diff --git a/services/opensbi/Makefile b/services/opensbi/Makefile
index 829c28a..acf19fd 100644
--- a/services/opensbi/Makefile
+++ b/services/opensbi/Makefile
@@ -72,6 +72,27 @@ SRCS-$(CONFIG_SERVICE_OPENSBI) += \
 	thirdparty/opensbi/lib/utils/timer/aclint_mtimer.c \
 	thirdparty/opensbi/lib/utils/ipi/aclint_mswi.c \
 
+ifneq ($(KEYSTONE_SM),)
+
+# Get the list of SM source files
+include $(KEYSTONE_SM)/plat/mpfs/objects.mk
+
+keystone-sm-src-paths = $(subst .o,.c,$(platform-objs-y))
+keystone-sm-cflags = $(CFLAGS_GCCEXT) $(platform-genflags-y)
+platform-cflags = $(keystone-sm-cflags)
+
+# Add them to source list
+SRCS-$(CONFIG_SERVICE_OPENSBI) += $(keystone-sm-src-paths)
+
+# Generate correct CFLAGS
+$(foreach f,$(platform-objs-y),$(eval $(f): CFLAGS=$(keystone-sm-cflags)))
+
+else
+
+platform-cflags = $(CFLAGS_GCCEXT)
+
+endif
+
 ifdef CONFIG_USE_IHC
 SRCS-$(CONFIG_SERVICE_OPENSBI_IHC) += \
 	services/opensbi/opensbi_ihc_ecall.c \
@@ -108,7 +129,7 @@ endif
 
 services/opensbi/opensbi_service.o: CFLAGS=$(CFLAGS_GCCEXT)
 services/opensbi/opensbi_ihc_ecall.o: CFLAGS=$(CFLAGS_GCCEXT)
-services/opensbi/platform.o: CFLAGS=$(CFLAGS_GCCEXT)
+services/opensbi/platform.o: CFLAGS=$(platform-cflags)
 $(OPENSBI_SRC_DIR)/lib/utils/irqchip/plic.o: CFLAGS=$(CFLAGS_GCCEXT)
 $(OPENSBI_SRC_DIR)/lib/utils/libfdt/fdt_rw.o: CFLAGS=$(CFLAGS_GCCEXT)
 $(OPENSBI_SRC_DIR)/lib/utils/libfdt/fdt_ro.o: CFLAGS=$(CFLAGS_GCCEXT)
diff --git a/services/opensbi/opensbi_service.c b/services/opensbi/opensbi_service.c
index f8bb9f0..e72dba5 100644
--- a/services/opensbi/opensbi_service.c
+++ b/services/opensbi/opensbi_service.c
@@ -84,6 +84,8 @@ static void opensbi_scratch_setup(enum HSSHartId hartid)
     pScratches[hartid].scratch.fw_start = (unsigned long)&_hss_start;
     pScratches[hartid].scratch.fw_size = (unsigned long)&_hss_end - (unsigned long)&_hss_start;
 
+    extern void _trap_exit(const struct sbi_trap_regs *regs);
+    pScratches[hartid].scratch.trap_exit = (unsigned long) &_trap_exit;
     sbi_hsm_set_device(&mpfs_hsm);
 }
 
diff --git a/services/opensbi/platform.c b/services/opensbi/platform.c
index b03f878..161b449 100644
--- a/services/opensbi/platform.c
+++ b/services/opensbi/platform.c
@@ -69,6 +69,8 @@
 #include "reboot_service.h"
 #include "clocks/hw_mss_clks.h"    // LIBERO_SETTING_MSS_RTC_TOGGLE_CLK
 
+#include "sm.h"
+
 #define MPFS_HART_COUNT            5
 #define MPFS_HART_STACK_SIZE       8192
 
@@ -197,11 +199,13 @@ static int mpfs_early_init(bool cold_boot)
 
 static int mpfs_final_init(bool cold_boot)
 {
+    void *fdt = sbi_scratch_thishart_arg1_ptr();
+    sm_init(cold_boot, fdt);
+
     if (!cold_boot) {
         return 0;
     }
 
-    void *fdt = sbi_scratch_thishart_arg1_ptr();
     if (fdt) {
         mpfs_modify_dt(fdt);
     }
